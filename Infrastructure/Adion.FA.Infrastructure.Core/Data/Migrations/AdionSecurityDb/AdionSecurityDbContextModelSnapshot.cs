// <auto-generated />
using System;
using Adion.FA.Infrastructure.Core.Data.Persistence.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Adion.FA.Infrastructure.Core.Data.Migrations.AdionSecurityDb
{
    [DbContext(typeof(AdionSecurityDbContext))]
    partial class AdionSecurityDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("Adion.FA.Core.Domain.Aggregates.Core.CoreUser", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("AccessDisabled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CodeOfConductRead")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConfirmationToken")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ConfirmedEmail")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedById")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HashCodeResetPassword")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Inaccesible")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastAccess")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastAccessFailed")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TenantId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedByUserName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.HasIndex("UserTypeId");

                    b.ToTable("CoreUser");

                    b.HasData(
                        new
                        {
                            UserId = "11111111-1111-1111-11111111111111111",
                            AccessDisabled = false,
                            AccessFailedCount = 0,
                            CodeOfConductRead = false,
                            ConfirmedEmail = false,
                            CreatedById = "11111111-1111-1111-11111111111111111",
                            CreatedByUserName = "sysadmin",
                            CreatedOn = new DateTime(2022, 9, 29, 19, 17, 37, 96, DateTimeKind.Utc).AddTicks(8002),
                            Email = "admin@adionteam.com",
                            Inaccesible = false,
                            IsDeleted = false,
                            Password = "Pa$$W0rd",
                            TenantId = "22222222-2222-2222-2222-222222222222",
                            UserName = "sysadmin",
                            UserTypeId = 1
                        });
                });

            modelBuilder.Entity("Adion.FA.Core.Domain.Aggregates.Core.CoreUserType", b =>
                {
                    b.Property<int>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedByUserName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Inaccesible")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("TenantId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedByUserName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("UserTypeId");

                    b.ToTable("CoreUserType");

                    b.HasData(
                        new
                        {
                            UserTypeId = 1,
                            Code = "Employee",
                            CreatedById = "11111111-1111-1111-11111111111111111",
                            CreatedByUserName = "sysadmin",
                            CreatedOn = new DateTime(2022, 9, 29, 19, 17, 37, 95, DateTimeKind.Utc).AddTicks(554),
                            Description = "Employee",
                            Inaccesible = false,
                            IsDeleted = false,
                            Name = "Employee",
                            TenantId = "22222222-2222-2222-2222-222222222222"
                        });
                });

            modelBuilder.Entity("Adion.FA.Core.Domain.Aggregates.Core.CoreUser", b =>
                {
                    b.HasOne("Adion.FA.Core.Domain.Aggregates.Core.CoreUserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserType");
                });
#pragma warning restore 612, 618
        }
    }
}
