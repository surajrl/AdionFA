<UserControl x:Class="AdionFA.UI.ProjectStation.Views.NodeBuilderView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:infrastructure="clr-namespace:AdionFA.UI.Infrastructure;assembly=AdionFA.UI.Infrastructure"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             d:DesignHeight="1080"
             d:DesignWidth="1920"
             dialog:DialogParticipation.Register="{Binding}"
             mc:Ignorable="d">

    <UserControl.Resources>
        <Thickness x:Key="ColumnMargin">
            10 5 10 5
        </Thickness>
        <Thickness x:Key="ControlMargin">
            0 5 25 5
        </Thickness>

        <Style x:Key="DisableBorderRarioBtn"
               TargetType="Button">
            <Setter Property="Padding" Value="5,0,5,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderBrush="{StaticResource MahApps.Brushes.Button.Border}"
                                BorderThickness="0,1,1,1"
                                CornerRadius="0,2,2,0">
                            <ContentPresenter x:Name="contentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Offset="0" Color="#FF5BB75B" />
                                            <GradientStop Offset="1" Color="#FF398239" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Body_Content_DataGrid_Centering"
               TargetType="{x:Type DataGridCell}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <StackPanel HorizontalAlignment="Right"
                    Orientation="Horizontal">
            <!--  Stop Button  -->
            <Grid Margin="0,20,10,0">
                <Button Width="80"
                        Height="40"
                        Command="{Binding Stop}">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:FontAwesome Width="14"
                                               Kind="PauseCircleSolid" />
                        <Label Content="Stop"
                               FontSize="11" />
                    </StackPanel>
                </Button>
            </Grid>

            <!--  Cancel Button  -->
            <Grid Margin="0,20,10,0">
                <Button Width="80"
                        Height="40"
                        Command="{Binding Cancel}">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:FontAwesome Width="14"
                                               Kind="StopCircleSolid" />
                        <Label Content="Cancel"
                               FontSize="11" />
                    </StackPanel>
                </Button>
            </Grid>

            <!--  Continue Button  -->
            <Grid Margin="0,20,10,0">
                <Button Width="80"
                        Height="40"
                        Command="{Binding Continue}">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:FontAwesome Width="14"
                                               Kind="PlayCircleSolid" />
                        <Label Content="Continue"
                               FontSize="11" />
                    </StackPanel>
                </Button>
            </Grid>

            <!--  Process Button  -->
            <Grid Margin="0,20,0,0">
                <Button Width="80"
                        Height="40"
                        Command="{Binding Process}"
                        IsEnabled="{Binding CanExecute}">
                    <StackPanel Orientation="Horizontal"
                                Visibility="{Binding IsTransactionActive, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                        <iconPacks:FontAwesome Width="14"
                                               Kind="PlaySolid" />
                        <Label Content="Process"
                               FontSize="11" />
                    </StackPanel>
                </Button>
                <metro:ProgressRing Width="25"
                                    Height="25"
                                    IsActive="True"
                                    Visibility="{Binding IsTransactionActive, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>

        </StackPanel>

        <!--  Configuration  -->
        <Expander Grid.Row="1"
                  Margin="0,10,0,10"
                  Header="Configuration"
                  IsExpanded="False"
                  Style="{DynamicResource ControlExpanderStyle}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <StackPanel Orientation="Horizontal">
                    <StackPanel Margin="{StaticResource ColumnMargin}">
                        <Label Content="Maximum Seed" />
                        <TextBox Width="250"
                                 Focusable="False"
                                 IsEnabled="False"
                                 IsReadOnly="True"
                                 Text="{Binding ProjectConfiguration.MinimalSeed}" />
                    </StackPanel>
                    <StackPanel Margin="{StaticResource ColumnMargin}">
                        <Label Content="Minimal Seed" />
                        <TextBox Width="250"
                                 Focusable="False"
                                 IsEnabled="False"
                                 IsReadOnly="True"
                                 Text="{Binding ProjectConfiguration.MaximumSeed}" />
                    </StackPanel>
                    <StackPanel Margin="{StaticResource ColumnMargin}">
                        <Label Content="Total Decimal Weka" />
                        <TextBox Width="250"
                                 Focusable="False"
                                 IsEnabled="False"
                                 IsReadOnly="True"
                                 Text="{Binding ProjectConfiguration.TotalDecimalWeka}" />
                    </StackPanel>
                </StackPanel>

                <StackPanel Grid.Row="1"
                            Orientation="Horizontal">
                    <!--  Nodes UP Target  -->
                    <StackPanel Margin="{StaticResource ColumnMargin}">
                        <Label Content="Nodes UP Target *" />
                        <TextBox Width="250"
                                 Focusable="False"
                                 IsEnabled="False"
                                 IsReadOnly="True"
                                 Text="{Binding ProjectConfiguration.NodeBuilderConfiguration.NodesUPTarget}" />
                    </StackPanel>

                    <!--  Nodes DOWN Target  -->
                    <StackPanel Margin="{StaticResource ColumnMargin}">
                        <Label Content="Nodes DOWN Target *" />
                        <TextBox Width="250"
                                 Focusable="False"
                                 IsEnabled="False"
                                 IsReadOnly="True"
                                 Text="{Binding ProjectConfiguration.NodeBuilderConfiguration.NodesDOWNTarget}" />
                    </StackPanel>

                    <!--  Transactions Target  -->
                    <StackPanel Margin="{StaticResource ColumnMargin}">
                        <Label Content="Total Trades Target *" />
                        <TextBox Width="250"
                                 Focusable="False"
                                 IsEnabled="False"
                                 IsReadOnly="True"
                                 Text="{Binding ProjectConfiguration.NodeBuilderConfiguration.TotalTradesTarget}" />
                    </StackPanel>
                </StackPanel>

                <!--  IS  -->
                <StackPanel Grid.Row="2"
                            Orientation="Horizontal">
                    <!--  Minimum Total Trades IS  -->
                    <StackPanel Margin="{StaticResource ColumnMargin}">
                        <Label Content="Minimum Total Trades (IS) *" />
                        <TextBox Width="250"
                                 Focusable="False"
                                 IsEnabled="False"
                                 IsReadOnly="True"
                                 Text="{Binding ProjectConfiguration.NodeBuilderConfiguration.MinTotalTradesIS}" />
                    </StackPanel>

                    <!--  Minimum Success Rate Percent IS  -->
                    <StackPanel Margin="{StaticResource ColumnMargin}">
                        <Label Content="Minimum Success Rate % (IS) *" />
                        <TextBox Width="250"
                                 Focusable="False"
                                 IsEnabled="False"
                                 IsReadOnly="True"
                                 Text="{Binding ProjectConfiguration.NodeBuilderConfiguration.MinSuccessRatePercentIS}" />
                    </StackPanel>
                </StackPanel>

                <!--  OS  -->
                <StackPanel Grid.Row="3"
                            Orientation="Horizontal">
                    <StackPanel Margin="{StaticResource ColumnMargin}">
                        <!--  Minimum Total Trades OS  -->
                        <Label Content="Minimum Total Trades (OS) *" />
                        <TextBox Width="250"
                                 Focusable="False"
                                 IsEnabled="False"
                                 IsReadOnly="True"
                                 Text="{Binding ProjectConfiguration.NodeBuilderConfiguration.MinTotalTradesOS}" />
                    </StackPanel>

                    <!--  Minimum Success Rate Percent OS  -->
                    <StackPanel Margin="{StaticResource ColumnMargin}">
                        <Label Content="Minimum Success Rate % (OS) *" />
                        <TextBox Width="250"
                                 Focusable="False"
                                 IsEnabled="False"
                                 IsReadOnly="True"
                                 Text="{Binding ProjectConfiguration.NodeBuilderConfiguration.MinSuccessRatePercentOS}" />
                    </StackPanel>
                </StackPanel>

                <StackPanel Grid.Row="4"
                            Orientation="Horizontal">
                    <!--  Maximum Success Rate Variation  -->
                    <StackPanel Margin="{StaticResource ColumnMargin}">
                        <Label Content="Maximum Success Rate Variation *" />
                        <TextBox Width="250"
                                 Focusable="False"
                                 IsEnabled="False"
                                 IsReadOnly="True"
                                 Text="{Binding ProjectConfiguration.NodeBuilderConfiguration.MaxSuccessRateVariation}" />
                    </StackPanel>
                </StackPanel>

                <StackPanel Grid.Row="5"
                            Orientation="Horizontal">
                    <!--  Weka N Total  -->
                    <StackPanel Margin="{StaticResource ColumnMargin}">
                        <Label Content="Weka N Total *" />
                        <TextBox Width="250"
                                 Focusable="False"
                                 IsEnabled="False"
                                 IsReadOnly="True"
                                 Text="{Binding ProjectConfiguration.NodeBuilderConfiguration.WekaNTotal}" />
                    </StackPanel>
                    <!--  Weka Max Ratio  -->
                    <StackPanel Margin="{StaticResource ColumnMargin}">
                        <Label Content="Weka Max Ratio *" />
                        <TextBox Width="250"
                                 Focusable="False"
                                 IsEnabled="False"
                                 IsReadOnly="True"
                                 Text="{Binding ProjectConfiguration.NodeBuilderConfiguration.WekaMaxRatio}" />
                    </StackPanel>
                    <!--  Weka Start Depth  -->
                    <StackPanel Margin="{StaticResource ColumnMargin}">
                        <Label Content="Weka Start Depth *" />
                        <TextBox Width="250"
                                 Focusable="False"
                                 IsEnabled="False"
                                 IsReadOnly="True"
                                 Text="{Binding ProjectConfiguration.NodeBuilderConfiguration.WekaStartDepth}" />
                    </StackPanel>
                    <!--  Weka End Depth  -->
                    <StackPanel Margin="{StaticResource ColumnMargin}">
                        <Label Content="Weka End Depth *" />
                        <TextBox Width="250"
                                 Focusable="False"
                                 IsEnabled="False"
                                 IsReadOnly="True"
                                 Text="{Binding ProjectConfiguration.NodeBuilderConfiguration.WekaEndDepth}" />
                    </StackPanel>
                </StackPanel>
            </Grid>
        </Expander>

        <!--  Node Builder  -->
        <metro:MetroHeader Grid.Row="2"
                           Header="Node Builder">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!--  Winning Nodes  -->
                <Grid Margin="{StaticResource ColumnMargin}"
                      HorizontalAlignment="Left">
                    <Button x:Name="winningNodesBtn"
                            Width="120"
                            Height="40"
                            IsEnabled="{Binding NodeBuilder.AllWinningNodes.Count, Converter={StaticResource IntToBooleanConverter}}">
                        <StackPanel Orientation="Horizontal">
                            <iconPacks:PackIconFontAwesome Width="14"
                                                           VerticalAlignment="Center"
                                                           Kind="TrophySolid" />
                            <Label Content="Winning Nodes"
                                   FontSize="11" />
                        </StackPanel>
                        <behaviors:Interaction.Triggers>
                            <behaviors:EventTrigger EventName="Click"
                                                    SourceName="winningNodesBtn">
                                <behaviors:InvokeCommandAction Command="{x:Static infrastructure:ApplicationCommands.ShowFlyoutCommand}">
                                    <behaviors:InvokeCommandAction.CommandParameter>
                                        <MultiBinding Converter="{StaticResource CommandParameterFlyoutConverter}">
                                            <Binding Source="{x:Static infrastructure:FlyoutRegions.FlyoutProjectModuleNodes}" />
                                            <Binding Path="NodeBuilder" />
                                        </MultiBinding>
                                    </behaviors:InvokeCommandAction.CommandParameter>
                                </behaviors:InvokeCommandAction>
                            </behaviors:EventTrigger>
                        </behaviors:Interaction.Triggers>
                    </Button>
                </Grid>

                <StackPanel Grid.Column="1"
                            Margin="{StaticResource ColumnMargin}"
                            HorizontalAlignment="Right">
                    <!--  Weka Depth  -->
                    <Label Content="Weka Depth" />
                    <TextBlock>
                        <Run Text="Start: " />
                        <Run Text="{Binding ProjectConfiguration.NodeBuilderConfiguration.WekaStartDepth}" />
                    </TextBlock>
                    <TextBlock>
                        <Run Text="Current: " />
                        <Run Text="{Binding CurrentWekaDepth}" />
                    </TextBlock>
                    <TextBlock>
                        <Run Text="End: " />
                        <Run Text="{Binding ProjectConfiguration.NodeBuilderConfiguration.WekaEndDepth}" />
                    </TextBlock>
                </StackPanel>

                <!--  Maximum Parallelism  -->
                <StackPanel Grid.Column="2"
                            Margin="{StaticResource ColumnMargin}"
                            HorizontalAlignment="Right">
                    <Label Content="Maximum Parallelism" />
                    <TextBox IsEnabled="{Binding IsTransactionActive, Converter={StaticResource InverseBooleanConverter}}"
                             Text="{Binding MaxParallelism}" />
                </StackPanel>
            </Grid>
        </metro:MetroHeader>

        <!--  Node Builder Process  -->
        <DataGrid Grid.Row="3"
                  Margin="0,10,0,0"
                  AutoGenerateColumns="False"
                  IsReadOnly="True"
                  ItemsSource="{Binding NodeBuilderProcesses}">
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                 Color="White" />
            </DataGrid.Resources>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="Foreground" Value="Black" />
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="Foreground" Value="Black" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="Gray" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <!--  Extraction  -->
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Extraction">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Label Margin="5"
                                   Content="{Binding ExtractionName}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!--  Tree Outputs  -->
                <DataGridTemplateColumn Width="*"
                                        Header="Tree Outputs">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Expander IsEnabled="{Binding BacktestNodes.Count, Converter={StaticResource IntToBooleanConverter}, Mode=OneWay}"
                                      Style="{StaticResource ControlExpanderStyle}">
                                <Expander.Header>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Margin="5"
                                                   Text="{Binding Message}" />
                                        <TextBlock Grid.Column="1"
                                                   Margin="5"
                                                   HorizontalAlignment="Right">
                                            <Run Text="Completed - " />
                                            <Run FontWeight="SemiBold"
                                                 Text="{Binding CompletedBacktests}" />
                                            <Run Text="/" />
                                            <Run FontWeight="SemiBold"
                                                 Text="{Binding BacktestNodes.Count, Mode=OneWay}" />
                                        </TextBlock>
                                    </Grid>
                                </Expander.Header>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <Button x:Name="viewNodeDetailBtn"
                                            Margin="{StaticResource ColumnMargin}">
                                        <Button.Content>
                                            <iconPacks:PackIconMaterial Width="12"
                                                                        Height="12"
                                                                        Kind="FileTreeOutline" />
                                        </Button.Content>
                                        <behaviors:Interaction.Triggers>
                                            <behaviors:EventTrigger EventName="Click"
                                                                    SourceName="viewNodeDetailBtn">
                                                <behaviors:InvokeCommandAction Command="{x:Static infrastructure:ApplicationCommands.ShowFlyoutCommand}">
                                                    <behaviors:InvokeCommandAction.CommandParameter>
                                                        <MultiBinding Converter="{StaticResource CommandParameterFlyoutConverter}">
                                                            <Binding Source="{x:Static infrastructure:FlyoutRegions.FlyoutProjectModuleNodes}" />
                                                            <Binding Path="BacktestNodes" />
                                                        </MultiBinding>
                                                    </behaviors:InvokeCommandAction.CommandParameter>
                                                </behaviors:InvokeCommandAction>
                                            </behaviors:EventTrigger>
                                        </behaviors:Interaction.Triggers>
                                    </Button>
                                    <Grid Grid.Column="1"
                                          Margin="{StaticResource ColumnMargin}">
                                        <metro:MetroProgressBar Height="20"
                                                                VerticalAlignment="Center"
                                                                Background="Transparent"
                                                                Foreground="CadetBlue"
                                                                Maximum="{Binding BacktestNodes.Count, Mode=OneWay}"
                                                                Minimum="0"
                                                                Value="{Binding ProgressCounter}" />
                                        <TextBlock Grid.Column="2"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center">
                                            <Run Text="Completed" />
                                            <Run Text=" - " />
                                            <Run FontWeight="SemiBold"
                                                 Text="{Binding ProgressCounter}" />
                                            <Run Text="/" />
                                            <Run FontWeight="SemiBold"
                                                 Text="{Binding BacktestNodes.Count, Mode=OneWay}" />
                                        </TextBlock>
                                    </Grid>
                                </Grid>
                            </Expander>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <StackPanel Grid.Row="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Visibility="{Binding IsTransactionActive, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
            <Label Content="Node Builder Process is Empty"
                   Visibility="{Binding NodeBuilderProcesses.Count, Converter={StaticResource LabelDataEmptyVisibilityConverter}}" />
        </StackPanel>

    </Grid>
</UserControl>
