<UserControl x:Class="Adion.FA.UI.Station.Module.Dashboard.MarketDataView"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:commonResources="clr-namespace:Adion.FA.Infrastructure.I18n.Resources;assembly=Adion.FA.Infrastructure.I18n"
             xmlns:infrastructure="clr-namespace:Adion.FA.UI.Station.Infrastructure;assembly=Adion.FA.UI.Station.Infrastructure"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Adion.FA.UI.Station.Module.Dashboard"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Thickness x:Key="ColumnMargin">10 5 10 5</Thickness>
        <Thickness x:Key="ControlMargin">0 5 25 15</Thickness>
    </UserControl.Resources>
    
    <Grid Margin="10 0 0 0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Row="0" Grid.Column="0" HorizontalAlignment="Right" Margin="0 0 10 0">
            <Button x:Name="GlobalConfigurationShellBtnSave" Width="150" Height="40"
                    IsEnabled="{Binding IsTransactionActive, Converter={StaticResource InverseBooleanConverter}}"
                    Command="{x:Static infrastructure:ApplicationCommands.ShowFlyoutCommand}"
                    HorizontalAlignment="Right">
                <Button.CommandParameter>
                    <MultiBinding Converter="{StaticResource CommandParameterFlyoutConverter}">
                        <Binding  Source="{x:Static infrastructure:FlyoutRegions.FlyoutUploadMarketData}"/>
                    </MultiBinding>
                </Button.CommandParameter>
                <StackPanel Orientation="Horizontal">
                    <iconPacks:FontAwesome Kind="PlusSolid" Width="14"/>
                    <Label Content="Upload Market Data" FontSize="11"/>
                </StackPanel>
            </Button>
        </Grid>

        <StackPanel Grid.Column="0" Margin="{StaticResource ColumnMargin}" Orientation="Horizontal">
            <StackPanel Margin="{StaticResource ControlMargin}">
                <Label>
                    <TextBlock>
                        <Run Text="{x:Static commonResources:CommonResources.Market}"/>
                        <Run Text=""/>
                    </TextBlock>
                </Label>
                <ComboBox x:Name="MarketFilterCb" ItemsSource="{Binding Markets}" MinWidth="225"
                            IsEnabled="{Binding IsTransactionActive, Converter={StaticResource InverseBooleanConverter}}"
                            DisplayMemberPath="Name"
                            SelectedValuePath="Id"
                            SelectedValue="{Binding MarketId, Mode=TwoWay}">
                    <behaviors:Interaction.Triggers>
                        <behaviors:EventTrigger SourceName="MarketFilterCb" EventName="SelectionChanged">
                            <behaviors:InvokeCommandAction Command="{Binding MarketDataFilterCommand}"/>
                        </behaviors:EventTrigger>
                    </behaviors:Interaction.Triggers>
                </ComboBox>
            </StackPanel>
            <StackPanel Margin="{StaticResource ControlMargin}">
                <Label>
                    <TextBlock>
                        <Run Text="{x:Static commonResources:CommonResources.CurrencyPair}"/>
                        <Run Text=""/>
                    </TextBlock>
                </Label>
                <ComboBox x:Name="PairFilterCb" ItemsSource="{Binding CurrencyPairs}" MinWidth="225"
                            IsEnabled="{Binding IsTransactionActive, Converter={StaticResource InverseBooleanConverter}}"
                            DisplayMemberPath="Name"
                            SelectedValuePath="Id"
                            SelectedValue="{Binding CurrencyPairId, Mode=TwoWay}">
                    <behaviors:Interaction.Triggers>
                        <behaviors:EventTrigger SourceName="PairFilterCb" EventName="SelectionChanged">
                            <behaviors:InvokeCommandAction Command="{Binding MarketDataFilterCommand}"/>
                        </behaviors:EventTrigger>
                    </behaviors:Interaction.Triggers>
                </ComboBox>
            </StackPanel>
            <StackPanel Margin="{StaticResource ControlMargin}">
                <Label>
                    <TextBlock>
                        <Run Text="{x:Static commonResources:CommonResources.Period}"/>
                        <Run Text=""/>
                    </TextBlock>
                </Label>
                <ComboBox x:Name="PeriodFilterCb" ItemsSource="{Binding CurrencyPeriods}" MinWidth="225"
                            IsEnabled="{Binding IsTransactionActive, Converter={StaticResource InverseBooleanConverter}}"
                            DisplayMemberPath="Name"
                            SelectedValuePath="Id"
                            SelectedValue="{Binding CurrencyPeriodId, Mode=TwoWay}">
                    <behaviors:Interaction.Triggers>
                        <behaviors:EventTrigger SourceName="PeriodFilterCb" EventName="SelectionChanged">
                            <behaviors:InvokeCommandAction Command="{Binding MarketDataFilterCommand}"/>
                        </behaviors:EventTrigger>
                    </behaviors:Interaction.Triggers>
                </ComboBox>
            </StackPanel>
        </StackPanel>

        <DataGrid x:Name="MarketDataGrid" 
                  Grid.Row="1"
                  Grid.Column="1"
                  Margin="10" IsReadOnly="True"
                  AutoGenerateColumns="False" 
                  ItemsSource="{Binding MarketData}"
                  RowHeaderWidth="0">
            <DataGrid.Columns>
                <DataGridTextColumn Width="1*" Binding="{Binding StartDateFormat}" Header="{x:Static commonResources:CommonResources.StartDate}" />
                <DataGridTextColumn Width="1*" Binding="{Binding StartTime}" Header="{x:Static commonResources:CommonResources.StartTime}" />
                <DataGridTextColumn Width="1*" Binding="{Binding OpenPrice}" Header="{x:Static commonResources:CommonResources.OpenPrice}" />
                <DataGridTextColumn Width="1*" Binding="{Binding MaxPrice}" Header="{x:Static commonResources:CommonResources.MaxPrice}" />
                <DataGridTextColumn Width="1*" Binding="{Binding MinPrice}" Header="{x:Static commonResources:CommonResources.MinPrice}" />
                <DataGridTextColumn Width="1*" Binding="{Binding ClosePrice}" Header="{x:Static commonResources:CommonResources.ClosePrice}" />
                <DataGridTextColumn Width="1*" Binding="{Binding Volumen}" Header="{x:Static commonResources:CommonResources.Volumen}" />
            </DataGrid.Columns>
        </DataGrid>

        <metro:MetroProgressBar Grid.Row="1" IsIndeterminate="True" Width="250"
                                Visibility="{Binding IsTransactionActive, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        <StackPanel Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" 
                    Visibility="{Binding IsTransactionActive, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
            <Label Content="List Market Data is Empty"
               Visibility="{Binding MarketData.Count, Converter={StaticResource LabelDataEmptyVisibilityConverter}}"/>
        </StackPanel>
    </Grid>
</UserControl>
