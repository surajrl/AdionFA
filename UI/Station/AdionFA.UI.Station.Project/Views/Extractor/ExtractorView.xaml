<UserControl x:Class="AdionFA.UI.Station.Project.Views.ExtractorView"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:commonResources="clr-namespace:AdionFA.Infrastructure.I18n.Resources;assembly=AdionFA.Infrastructure.I18n"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:AdionFA.UI.Station.Project.Views"
             dialog:DialogParticipation.Register="{Binding}"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800">

    <UserControl.Resources>
        <Thickness x:Key="ColumnMargin">10 5 10 5</Thickness>
        <Thickness x:Key="ControlMargin">0 5 25 5</Thickness>

        <Style TargetType="Button"
               x:Key="DisableBorderRarioBtn">
            <Setter Property="Padding"
                    Value="5,0,5,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="0,2,2,0"
                                BorderBrush="{StaticResource MahApps.Brushes.Button.Border}"
                                BorderThickness="0,1,1,1">
                            <ContentPresenter x:Name="contentPresenter"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1"
                                                             StartPoint="0.5,0">
                                            <GradientStop Color="#FF5BB75B"
                                                          Offset="0" />
                                            <GradientStop Color="#FF398239"
                                                          Offset="1" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Cursor"
                                        Value="Hand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid Margin="10 0 0 0">
        <!--#region Row & Col Definition-->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <!--#endregion-->

        <!--#region ProcessBtn-->
        <Grid HorizontalAlignment="Right"
              Margin="0 20 10 0">
            <Button Width="80"
                    Height="40"
                    IsEnabled="{Binding CanExecute}"
                    Command="{Binding ProcessBtnCommand}"
                    HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal"
                            Visibility="{Binding IsTransactionActive, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                    <iconPacks:FontAwesome Kind="PlaySolid"
                                           Width="14" />
                    <Label Content="Process"
                           FontSize="11" />
                </StackPanel>
            </Button>
            <metro:ProgressRing IsActive="True"
                                Width="25"
                                Height="25"
                                Visibility="{Binding IsTransactionActive, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </Grid>
        <!--#endregion-->

        <!--#region Configurations Vars-->
        <metro:MetroHeader Grid.Row="1"
                           Margin="0 0 10 15"
                           Header="{x:Static commonResources:CommonResources.Configurations}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0"
                            Margin="10 0"
                            Orientation="Horizontal">

                    <!--#region CurrencyPair-->
                    <StackPanel Margin="{StaticResource ControlMargin}">
                        <Label>
                            <TextBlock>
                                    <Run Text="{x:Static commonResources:CommonResources.Symbols}" />
                                    <Run Text="" />
                            </TextBlock>
                        </Label>
                        <TextBox Text="{Binding Symbol}"
                                 IsReadOnly="True"
                                 Focusable="False"
                                 IsEnabled="False"
                                 Width="225" />
                    </StackPanel>
                    <!--#endregion-->

                    <!--#region CurrencyPeriod-->
                    <StackPanel Margin="{StaticResource ControlMargin}">
                        <Label>
                            <TextBlock>
                                    <Run Text="{x:Static commonResources:CommonResources.Time}" />
                                    <Run Text="" />
                            </TextBlock>
                        </Label>
                        <TextBox Text="{Binding Timeframe}"
                                 IsReadOnly="True"
                                 Focusable="False"
                                 IsEnabled="False"
                                 Width="225" />
                    </StackPanel>
                    <!--#endregion-->

                    <!--#region Variation-->
                    <StackPanel Margin="{StaticResource ControlMargin}">
                        <Label>
                            <TextBlock>
                                    <Run Text="{x:Static commonResources:CommonResources.Variation}" />
                                    <Run Text="" />
                            </TextBlock>
                        </Label>
                        <TextBox Text="{Binding Variation}"
                                 IsReadOnly="True"
                                 Focusable="False"
                                 IsEnabled="False"
                                 Width="225" />
                    </StackPanel>
                    <!--#endregion-->

                    <!--#region WithoutSchedule-->
                    <StackPanel Margin="{StaticResource ControlMargin}">
                        <Label>
                            <TextBlock>
                                    <Run Text="{x:Static commonResources:CommonResources.WithoutSchedules}" />
                                    <Run Text="" />
                            </TextBlock>
                        </Label>
                        <TextBox Text="{Binding WithoutSchedule}"
                                 IsReadOnly="True"
                                 Focusable="False"
                                 IsEnabled="False"
                                 Width="225" />
                    </StackPanel>
                    <!--#endregion-->
                </StackPanel>
                <StackPanel Grid.Row="1"
                            Margin="10 0"
                            Orientation="Horizontal">

                    <!--#region ExtractorPath-->
                    <StackPanel>
                        <Label>
                            <TextBlock>
                                        <Run Text="{x:Static commonResources:CommonResources.Extractor}" />
                                        <Run Text="" />
                            </TextBlock>
                        </Label>
                        <TextBox x:Name="txtPathFile"
                                 IsReadOnly="True"
                                 Focusable="False"
                                 MinWidth="700"
                                 IsEnabled="False"
                                 Text="{Binding ExtractorPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <!--#endregion-->

                    <!--#region openExtractorPathBtn-->
                    <Button Name="openExtractorPathBtn"
                            VerticalAlignment="Bottom"
                            Style="{StaticResource DisableBorderRarioBtn}"
                            Click="openExtractorPathBtn_Click">
                        <StackPanel Orientation="Horizontal">
                            <iconPacks:FontAwesome Kind="FolderOpenSolid"
                                                   Width="14" />
                        </StackPanel>
                    </Button>
                    <!--#endregion-->
                </StackPanel>
            </Grid>
        </metro:MetroHeader>
        <!--#endregion-->

        <!--#region ExtractorInformation-->
        <metro:MetroHeader Grid.Row="2"
                           Margin="0 0 10 20"
                           Header="{x:Static commonResources:CommonResources.ExtractorInformation}">
            <Grid Margin="0 10 0 0">
                <Grid.RowDefinitions>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0"
                            Margin="10 0"
                            Orientation="Horizontal">

                    <!--#region StartDate-->
                    <StackPanel Margin="0 0 25 0">
                        <Label>
                            <TextBlock>
                                <Run Text="{x:Static commonResources:CommonResources.StartTime}" />
                                <Run Text="{x:Static commonResources:CommonResources.IS}" />
                                <Run Text="*" />
                            </TextBlock>
                        </Label>
                        <metro:DateTimePicker SelectedTimeFormat="Short"
                                              Culture="(Default)"
                                              Width="225"
                                              IsEnabled="False"
                                              Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
                                              SelectedDateTime="{Binding StartDate, Mode=TwoWay}" />
                    </StackPanel>
                    <!--#endregion-->

                    <!--#region EndDate-->
                    <StackPanel Margin="0 0 25 0">
                        <Label>
                            <TextBlock>
                                <Run Text="{x:Static commonResources:CommonResources.EndTime}" />
                                <Run Text="{x:Static commonResources:CommonResources.IS}" />
                                <Run Text="*" />
                            </TextBlock>
                        </Label>
                        <metro:DateTimePicker SelectedTimeFormat="Short"
                                              Culture="(Default)"
                                              Width="225"
                                              IsEnabled="False"
                                              Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
                                              SelectedDateTime="{Binding EndDate, Mode=TwoWay}" />
                    </StackPanel>
                    <!--#endregion-->
                </StackPanel>

                <!--#region addTemplateBtn-->
                <Button x:Name="addTemplateBtn"
                        Width="80"
                        Height="40"
                        IsEnabled="{Binding CanExecute}"
                        Grid.Column="1"
                        HorizontalAlignment="Right"
                        Click="addTemplateBtn_Click">
                    <StackPanel Orientation="Horizontal"
                                Visibility="{Binding IsTransactionActive, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                        <iconPacks:FontAwesome Kind="PlusSolid"
                                               Width="14" />
                        <Label Content="Add"
                               FontSize="11" />
                    </StackPanel>
                </Button>
                <metro:ProgressRing Grid.Column="1"
                                    IsActive="True"
                                    Width="25"
                                    Height="25"
                                    Visibility="{Binding IsTransactionActive, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <!--#endregion-->

                <!--#region replaceTemplateBtn-->
                <Button x:Name="replaceTemplateBtn"
                        Width="80"
                        Height="40"
                        Margin="10 0 0 0"
                        IsEnabled="{Binding CanExecute}"
                        Grid.Column="2"
                        HorizontalAlignment="Right"
                        Click="replaceTemplateBtn_Click">
                    <StackPanel Orientation="Horizontal"
                                Visibility="{Binding IsTransactionActive, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                        <iconPacks:FontAwesome Kind="UploadSolid"
                                               Width="14" />
                        <Label Content="Replace"
                               FontSize="11" />
                    </StackPanel>
                </Button>
                <metro:ProgressRing Grid.Column="2"
                                    IsActive="True"
                                    Width="25"
                                    Height="25"
                                    Visibility="{Binding IsTransactionActive, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <!--#endregion-->

                <!--#region Refresh Button-->
                <Button Width="80"
                        Height="40"
                        Margin="10 0 0 0"
                        IsEnabled="{Binding CanExecute}"
                        Grid.Column="3"
                        HorizontalAlignment="Right"
                        Command="{Binding RefreshBtnCommand}">
                    <StackPanel Orientation="Horizontal"
                                Visibility="{Binding IsTransactionActive, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                        <iconPacks:PackIconFontAwesome Kind="RedoSolid"
                                                       Width="14" />
                        <Label Content="Refresh"
                               FontSize="11" />
                    </StackPanel>
                </Button>
                <metro:ProgressRing Grid.Column="3"
                                    IsActive="True"
                                    Width="25"
                                    Height="25"
                                    Visibility="{Binding IsTransactionActive, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <!--#endregion-->
            </Grid>
        </metro:MetroHeader>
        <!--#endregion-->

        <!--#region Grid-->
        <DataGrid x:Name="ExtractionProcessDataGrid"
                  Grid.Row="3"
                  Grid.Column="1"
                  Margin="10 5"
                  IsReadOnly="True"
                  AutoGenerateColumns="False"
                  ItemsSource="{Binding ExtractionProcessList}"
                  RowHeaderWidth="0">
            <DataGrid.Columns>
                <DataGridTextColumn Width="1*"
                                    Binding="{Binding TemplateName}"
                                    Header="{x:Static commonResources:CommonResources.TemplateName}" />
                <DataGridTextColumn Width="1*"
                                    Binding="{Binding Status}"
                                    Header="{x:Static commonResources:CommonResources.Status}" />
                <DataGridTextColumn Width="1*"
                                    Binding="{Binding ExtractionName}"
                                    Header="{x:Static commonResources:CommonResources.ExtractionName}" />
                <DataGridTextColumn Width="1*"
                                    Binding="{Binding Message}"
                                    Header="{x:Static commonResources:CommonResources.Message}" />
            </DataGrid.Columns>
        </DataGrid>

        <StackPanel Grid.Row="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Visibility="{Binding IsTransactionActive, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
            <Label Content="Extractor Process is Empty"
                   Visibility="{Binding ExtractionProcessList.Count, Converter={StaticResource LabelDataEmptyVisibilityConverter}}" />
        </StackPanel>
        <!--#endregion-->
    </Grid>
</UserControl>
