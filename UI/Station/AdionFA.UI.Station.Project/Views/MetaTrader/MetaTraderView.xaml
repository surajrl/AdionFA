<UserControl x:Class="AdionFA.UI.Station.Project.Views.MetaTraderView"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:commonResources="clr-namespace:AdionFA.Infrastructure.I18n.Resources;assembly=AdionFA.Infrastructure.I18n"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:infrastructure="clr-namespace:AdionFA.UI.Station.Infrastructure;assembly=AdionFA.UI.Station.Infrastructure"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:AdionFA.UI.Station.Project.Views"
             dialog:DialogParticipation.Register="{Binding}"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800">

    <UserControl.Resources>
        <Thickness x:Key="ColumnMargin">10 5 10 5</Thickness>
        <Thickness x:Key="ControlMargin">0 5 25 5</Thickness>

        <Style TargetType="Button"
               x:Key="DisableBorderRarioBtn">
            <Setter Property="Padding"
                    Value="5,0,5,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="0,2,2,0"
                                BorderBrush="{StaticResource MahApps.Brushes.Button.Border}"
                                BorderThickness="0,1,1,1">
                            <ContentPresenter x:Name="contentPresenter"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1"
                                                             StartPoint="0.5,0">
                                            <GradientStop Color="#FF5BB75B"
                                                          Offset="0" />
                                            <GradientStop Color="#FF398239"
                                                          Offset="1" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Cursor"
                                        Value="Hand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Body_Content_DataGrid_Centering"
               TargetType="{x:Type DataGridCell}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Right">
            <!--#region Stop Button-->
            <Grid Margin="0 20 10 0">
                <Button Width="80"
                        Height="40"
                        Command="{Binding StopCommand}">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:FontAwesome Kind="PauseCircleSolid"
                                               Width="14" />
                        <Label Content="Stop"
                               FontSize="11" />
                    </StackPanel>
                </Button>
            </Grid>
            <!--#endregion-->
            <!--#region Process Button-->
            <Grid Margin="0 20 0 0">
                <Button Width="80"
                        Height="40"
                        IsEnabled="{Binding CanExecute}"
                        Command="{Binding ProcessCommand}">
                    <StackPanel Orientation="Horizontal"
                                Visibility="{Binding IsTransactionActive, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                        <iconPacks:FontAwesome Kind="PlaySolid"
                                               Width="14" />
                        <Label Content="Process"
                               FontSize="11" />
                    </StackPanel>
                </Button>
                <metro:ProgressRing IsActive="True"
                                    Width="25"
                                    Height="25"
                                    Visibility="{Binding IsTransactionActive, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>
            <!--#endregion-->
        </StackPanel>

        <!--Expert Advisor-->
        <Expander Grid.Row="1"
                  Margin="0 10 0 10"
                  Style="{DynamicResource ControlExpanderStyle}"
                  Header="Expert Advisor"
                  IsExpanded="False">
            <StackPanel Orientation="Horizontal">
                <!--#region Response Port-->
                <StackPanel Margin="{StaticResource ColumnMargin}">
                    <Label Content="Magic Number: " />
                    <TextBox Text="{Binding ExpertAdvisor.MagicNumber, UpdateSourceTrigger=PropertyChanged}"
                             Width="100" />
                </StackPanel>
                <!--#endregion-->
                <!--#region Host-->
                <StackPanel Margin="{StaticResource ColumnMargin}">
                    <Label Content="Host: " />
                    <TextBox Text="{Binding ExpertAdvisor.Host, UpdateSourceTrigger=PropertyChanged}"
                             Width="100" />
                </StackPanel>
                <!--#endregion-->
                <!--#region Publisher Port-->
                <StackPanel Margin="{StaticResource ColumnMargin}">
                    <Label Content="Publisher Port: " />
                    <TextBox Text="{Binding ExpertAdvisor.PublisherPort, UpdateSourceTrigger=PropertyChanged}"
                             Width="100" />
                </StackPanel>
                <!--#endregion-->
                <!--#region Response Port-->
                <StackPanel Margin="{StaticResource ColumnMargin}">
                    <Label Content="Response Port: " />
                    <TextBox Text="{Binding ExpertAdvisor.ResponsePort, UpdateSourceTrigger=PropertyChanged}"
                             Width="100" />
                </StackPanel>
                <!--#endregion-->

                <!--#region Save-->
                <Button Width="80"
                        Height="40"
                        VerticalAlignment="Bottom"
                        Margin="{StaticResource ColumnMargin}"
                        Command="{Binding SaveEACommand}">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconMaterial Kind="ContentSave"
                                                    VerticalAlignment="Center"
                                                    Width="14" />
                        <Label Content="Save"
                               FontSize="11" />
                    </StackPanel>
                </Button>
            </StackPanel>
            <!--#endregion-->
        </Expander>
        <!--#endregion-->

        <metro:MetroHeader Grid.Row="2"
                           Header="MetaTrader">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!--#region Messages From Current Period-->
                <TextBlock HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Margin="{StaticResource ColumnMargin}">
                        <Run Text="Input Messages"
                             FontWeight="SemiBold" />
                        <Run Text=":"
                             FontWeight="SemiBold" />
                        <Run Text="{Binding MessageInput.Count, Mode=OneWay}" />
                </TextBlock>
                <!--#endregion-->

                <!--#region Clean Buttons-->
                <StackPanel Grid.Column="1"
                            Orientation="Horizontal">
                    <!--#region Clean Input-->
                    <Grid Margin="{StaticResource ColumnMargin}">
                        <Button Command="{Binding CleanMessageInputCommand}"
                                IsEnabled="{Binding MessageInput.Count, Mode=OneWay, Converter={StaticResource IntToBooleanConverter}}"
                                Width="100"
                                Height="40">
                            <StackPanel Orientation="Horizontal">
                                <iconPacks:PackIconMaterial Kind="TextBoxRemoveOutline"
                                                            VerticalAlignment="Center"
                                                            Width="14" />
                                <Label Content="Clean Input"
                                       FontSize="11" />
                            </StackPanel>
                        </Button>
                    </Grid>
                    <!--#endregion-->
                    <!--#region Clean Output-->
                    <Grid Margin="{StaticResource ColumnMargin}">
                        <Button Command="{Binding CleanMessageOutputCommand}"
                                IsEnabled="{Binding MessageOutput.Count, Mode=OneWay, Converter={StaticResource IntToBooleanConverter}}"
                                Width="100"
                                Height="40">
                            <StackPanel Orientation="Horizontal">
                                <iconPacks:PackIconMaterial Kind="TextBoxRemoveOutline"
                                                            VerticalAlignment="Center"
                                                            Width="14" />
                                <Label Content="Clean Output"
                                       FontSize="11" />
                            </StackPanel>
                        </Button>
                    </Grid>
                    <!--#endregion-->
                </StackPanel>
                <!--#endregion-->

                <!--#region Toggle Switch-->
                <StackPanel Grid.Column="2"
                            Orientation="Horizontal">
                    <StackPanel>
                        <Label Content="Test Assembled Node" />
                        <metro:ToggleSwitch Toggled="TestAssembledNodeToggleSwitch_Toggled"
                                            IsOn="{Binding TestAssembledNode, Mode=TwoWay}" />
                    </StackPanel>
                    <StackPanel>
                        <Label Content="Test Node" />
                        <metro:ToggleSwitch Toggled="TestNodeToggleSwitch_Toggled"
                                            IsOn="{Binding TestNode, Mode=TwoWay}" />
                    </StackPanel>
                </StackPanel>
                <!--#endregion-->

                <!--#region Buttons-->
                <StackPanel Grid.Column="3"
                            Orientation="Horizontal"
                            HorizontalAlignment="Right">
                    <!--#region Assembled Node-->
                    <Grid Margin="{StaticResource ColumnMargin}">
                        <Button x:Name="assembledNodesBtn"
                                Width="125"
                                Height="40">
                            <StackPanel Orientation="Horizontal">
                                <iconPacks:PackIconMaterial Kind="GraphOutline"
                                                            VerticalAlignment="Center"
                                                            Width="15" />
                                <Label Content="Assembled Node"
                                       FontSize="11" />
                            </StackPanel>
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger SourceName="assembledNodesBtn"
                                                        EventName="Click">
                                    <behaviors:InvokeCommandAction Command="{x:Static infrastructure:ApplicationCommands.ShowFlyoutCommand}">
                                        <behaviors:InvokeCommandAction.CommandParameter>
                                            <MultiBinding Converter="{StaticResource CommandParameterFlyoutConverter}">
                                                <Binding Source="{x:Static infrastructure:FlyoutRegions.FlyoutProjectModuleAssembledNodes}" />
                                                <Binding Path="AssembledNode" />
                                                <Binding Path="AssembledNode.ChildNodes" />
                                            </MultiBinding>
                                        </behaviors:InvokeCommandAction.CommandParameter>
                                    </behaviors:InvokeCommandAction>
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </Button>
                    </Grid>
                    <!--#region Single Node-->
                    <Grid Margin="{StaticResource ColumnMargin}">
                        <Button x:Name="nodeBtn"
                                Width="80"
                                Height="40">
                            <StackPanel Orientation="Horizontal">
                                <iconPacks:PackIconMaterial Kind="FileTreeOutline"
                                                            VerticalAlignment="Center"
                                                            Width="15" />
                                <Label Content="Node"
                                       FontSize="11" />
                            </StackPanel>
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger SourceName="nodeBtn"
                                                        EventName="Click">
                                    <behaviors:InvokeCommandAction Command="{x:Static infrastructure:ApplicationCommands.ShowFlyoutCommand}">
                                        <behaviors:InvokeCommandAction.CommandParameter>
                                            <MultiBinding Converter="{StaticResource CommandParameterFlyoutConverter}">
                                                <Binding Source="{x:Static infrastructure:FlyoutRegions.FlyoutProjectModuleNodes}" />
                                                <Binding Path="Node" />
                                            </MultiBinding>
                                        </behaviors:InvokeCommandAction.CommandParameter>
                                    </behaviors:InvokeCommandAction>
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </Button>
                        <!--#endregion-->
                    </Grid>
                </StackPanel>
                <!--#endregion-->

            </Grid>
        </metro:MetroHeader>

        <Grid Grid.Row="3"
              Margin="0, 10, 0, 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid Grid.ColumnSpan="2">
                <Grid Name="dummygrid"
                      Visibility="Hidden">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.4*"></ColumnDefinition>
                        <ColumnDefinition Width="1.2*"></ColumnDefinition>
                        <ColumnDefinition Width="1*"></ColumnDefinition>
                        <ColumnDefinition Width="1*"></ColumnDefinition>
                        <ColumnDefinition Width="1*"></ColumnDefinition>
                        <ColumnDefinition Width="1*"></ColumnDefinition>
                        <ColumnDefinition Width="0.8*"></ColumnDefinition>
                        <ColumnDefinition Width="0.8*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0"
                            Name="dummywidth0"></Border>
                    <Border Grid.Column="1"
                            Name="dummywidth1"></Border>
                    <Border Grid.Column="2"
                            Name="dummywidth2"></Border>
                    <Border Grid.Column="3"
                            Name="dummywidth3"></Border>
                    <Border Grid.Column="4"
                            Name="dummywidth4"></Border>
                    <Border Grid.Column="5"
                            Name="dummywidth5"></Border>
                    <Border Grid.Column="6"
                            Name="dummywidth6"></Border>
                    <Border Grid.Column="7"
                            Name="dummywidth7"></Border>
                </Grid>
                <!--#region Message Input-->
                <metro:MetroHeader Margin="0, 0, 10, 0"
                                   Header="{x:Static commonResources:CommonResources.MessageInput}">
                    <ListView ItemsSource="{Binding MessageInput}"
                              Style="{StaticResource MahApps.Styles.ListView.Virtualized}">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Width="{Binding ElementName=dummywidth0, Path=ActualWidth}"
                                                DisplayMemberBinding="{Binding Id}"
                                                Header="{x:Static commonResources:CommonResources.ID}" />
                                <GridViewColumn Width="{Binding ElementName=dummywidth1, Path=ActualWidth}"
                                                DisplayMemberBinding="{Binding DateFormat}"
                                                Header="{x:Static commonResources:CommonResources.Date}" />
                                <GridViewColumn Width="{Binding ElementName=dummywidth2, Path=ActualWidth}"
                                                DisplayMemberBinding="{Binding Open, StringFormat=N5}"
                                                Header="{x:Static commonResources:CommonResources.Open}" />
                                <GridViewColumn Width="{Binding ElementName=dummywidth3, Path=ActualWidth}"
                                                DisplayMemberBinding="{Binding High, StringFormat=N5}"
                                                Header="{x:Static commonResources:CommonResources.High}" />
                                <GridViewColumn Width="{Binding ElementName=dummywidth4, Path=ActualWidth}"
                                                DisplayMemberBinding="{Binding Low, StringFormat=N5}"
                                                Header="{x:Static commonResources:CommonResources.Low}" />
                                <GridViewColumn Width="{Binding ElementName=dummywidth5, Path=ActualWidth}"
                                                DisplayMemberBinding="{Binding Close, StringFormat=N5}"
                                                Header="{x:Static commonResources:CommonResources.Close}" />
                                <GridViewColumn Width="{Binding ElementName=dummywidth6, Path=ActualWidth}"
                                                DisplayMemberBinding="{Binding Volume}"
                                                Header="{x:Static commonResources:CommonResources.Volume}" />
                                <GridViewColumn Width="{Binding ElementName=dummywidth7, Path=ActualWidth}"
                                                DisplayMemberBinding="{Binding Spread}"
                                                Header="{x:Static commonResources:CommonResources.Spread}" />
                            </GridView>
                        </ListView.View>
                    </ListView>
                </metro:MetroHeader>
            </Grid>
            <Grid Grid.Column="3">
                <Grid Name="dummygrid1"
                      Visibility="Hidden">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.4*"></ColumnDefinition>
                        <ColumnDefinition Width="1.2*"></ColumnDefinition>
                        <ColumnDefinition Width="0.8*"></ColumnDefinition>
                        <ColumnDefinition Width="0.8*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0"
                            Name="dummywidth10"></Border>
                    <Border Grid.Column="1"
                            Name="dummywidth11"></Border>
                    <Border Grid.Column="2"
                            Name="dummywidth12"></Border>
                    <Border Grid.Column="3"
                            Name="dummywidth13"></Border>
                </Grid>
                <!--#region Message Output-->
                <metro:MetroHeader Margin="10 0 0 0"
                                   Header="{x:Static commonResources:CommonResources.MessageOutput}">
                    <ListView ItemsSource="{Binding MessageOutput}"
                              Style="{StaticResource MahApps.Styles.ListView.Virtualized}">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Width="{Binding ElementName=dummywidth10, Path=ActualWidth}"
                                                DisplayMemberBinding="{Binding Id}"
                                                Header="{x:Static commonResources:CommonResources.ID}" />
                                <GridViewColumn Width="{Binding ElementName=dummywidth11, Path=ActualWidth}"
                                                DisplayMemberBinding="{Binding DateFormat}"
                                                Header="{x:Static commonResources:CommonResources.Date}" />
                                <GridViewColumn Width="{Binding ElementName=dummywidth12, Path=ActualWidth}"
                                                DisplayMemberBinding="{Binding PositionTypeName}"
                                                Header="{x:Static commonResources:CommonResources.PositionType}" />
                                <GridViewColumn Width="{Binding ElementName=dummywidth13, Path=ActualWidth}"
                                                DisplayMemberBinding="{Binding Volume, StringFormat=N5}"
                                                Header="{x:Static commonResources:CommonResources.Volume}" />
                            </GridView>
                        </ListView.View>
                    </ListView>
                </metro:MetroHeader>
            </Grid>
        </Grid>
    </Grid>
</UserControl>