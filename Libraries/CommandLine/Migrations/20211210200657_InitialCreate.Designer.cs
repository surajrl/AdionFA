// <auto-generated />
using System;
using CommandLine.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CommandLine.Migrations
{
    [DbContext(typeof(GeocodingDBContext))]
    [Migration("20211210200657_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BestDoctors.DirectInsurance.Core.Domain.Entities.Generic.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExternalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("Lat")
                        .HasColumnType("float");

                    b.Property<double?>("Lng")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("BestDoctors.DirectInsurance.Core.Domain.Entities.Generic.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("A3Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("BDCommercial")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GeoAreaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SaCode")
                        .HasColumnType("int");

                    b.Property<bool>("ShowBDAcademy")
                        .HasColumnType("bit");

                    b.Property<bool>("ValidateCodeOfConduct")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GeoAreaId");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("BestDoctors.DirectInsurance.Core.Domain.Entities.Generic.GeoArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GeoArea");
                });

            modelBuilder.Entity("BestDoctors.DirectInsurance.Core.Domain.Entities.Generic.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("ExternalId")
                        .HasColumnType("int");

                    b.Property<string>("ISO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Province");
                });

            modelBuilder.Entity("BestDoctors.DirectInsurance.Core.Domain.Entities.Generic.City", b =>
                {
                    b.HasOne("BestDoctors.DirectInsurance.Core.Domain.Entities.Generic.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BestDoctors.DirectInsurance.Core.Domain.Entities.Generic.Province", "Province")
                        .WithMany("Cities")
                        .HasForeignKey("ProvinceId");

                    b.Navigation("Country");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("BestDoctors.DirectInsurance.Core.Domain.Entities.Generic.Country", b =>
                {
                    b.HasOne("BestDoctors.DirectInsurance.Core.Domain.Entities.Generic.GeoArea", "GeoArea")
                        .WithMany("Countries")
                        .HasForeignKey("GeoAreaId");

                    b.Navigation("GeoArea");
                });

            modelBuilder.Entity("BestDoctors.DirectInsurance.Core.Domain.Entities.Generic.Province", b =>
                {
                    b.HasOne("BestDoctors.DirectInsurance.Core.Domain.Entities.Generic.Country", "Country")
                        .WithMany("Provinces")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("BestDoctors.DirectInsurance.Core.Domain.Entities.Generic.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("Provinces");
                });

            modelBuilder.Entity("BestDoctors.DirectInsurance.Core.Domain.Entities.Generic.GeoArea", b =>
                {
                    b.Navigation("Countries");
                });

            modelBuilder.Entity("BestDoctors.DirectInsurance.Core.Domain.Entities.Generic.Province", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
